createPost:
  handler: src/handlers/api/createPost.handler
  allowAccess: api
  iamRoleStatements:
    - ${self:custom.permissions.dynamodbWriter}

searchPosts:
  handler: src/handlers/api/searchPosts.handler
  allowAccess: api
  iamRoleStatements:
    - ${self:custom.permissions.dynamodbReader}

putVote:
  handler: src/handlers/api/putVote.handler
  allowAccess: api
  iamRoleStatements:
    - ${self:custom.permissions.dynamodbWriter}

sendNotificationTasksWorker:
  handler: src/handlers/worker/taskProcessor.handler
  events:
    - sqs:
        batchSize: 10
        arn: ${self:custom.bootstrap.exports.sendNotificationTasksQueueArn}
  iamRoleStatements:
    - ${self:custom.permissions.sqsReader}

streamListener:
  handler: src/handlers/worker/streamListener.handler
  environment:
    UPDATE_VOTE_COUNT_TASKS_QUEUE_URL: ${self:custom.bootstrap.exports.updateVoteCountTasksQueueUrl}
  iamRoleStatements:
    - ${self:custom.permissions.sqsWriter}
  events:
    - stream:
        type: dynamodb
        batchSize: 1000
        arn: ${self:custom.bootstrap.exports.streamArn}

updateVoteCountTasksWorker:
  handler: src/handlers/worker/taskProcessor.handler
  events:
    - sqs:
        batchSize: 10
        arn: ${self:custom.bootstrap.exports.updateVoteCountTasksQueueArn}
  iamRoleStatements:
    - ${self:custom.permissions.dynamodbWriter}
    - ${self:custom.permissions.sqsReader}
